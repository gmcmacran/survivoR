---
format: gfm
---

## Repo Overview

This repo explores two classic statistical models for survival analysis using patients who experienced myocardial infarctions.

Models:

-   Kaplan-Meier
-   Cox Proportional Hazards

```{r}
#| include: false
library(tidyverse)
library(survival)
library(StepReg)
library(ggplot2)
library(scales)
library(dplyr)
library(ggfortify)
library(GGally)
```

## Censoring

Right censoring occurs when the event of interest is yet to be observed for some data. Examples include time to death for patients with a terminal illness, time to relapse for patients in rehab, or time to service termination for customers. Here are three hypothetical data points.

```{r}
#| echo: false
tibble(Time = c(1, 2, 3), Event = c(0, 1, 1))
```

The average of time is not two. Due to the first observation being censored, the average is **at least** two. Unless all data points are uncensored, this "at least" affects all summary statistics, hypothesis tests, and models. Survival analysis is the area of statistics designed to deal with this notion of "at least" inherent in the data.

## Data Overview

The data set includes 500 patients who suffered a heart attack.

Variables:

-   id - Identification Code (1 - 500)
-   age - Age at Hospital Admission (years)
-   gender - Gender (0 = Male, 1 = Female)
-   hr - Initial Heart Rate (Beats per minute)
-   sysbp - Initial Systolic Blood Pressure (mmHg)
-   diasbp - Initial Diastolic Blood Pressure (mmHg)
-   bmi - Body Mass Index (kg/m\^2)
-   cvd - History of Cardiovascular Disease (0 = No, 1 = Yes)
-   afb - Atrial Fibrillation (0 = No, 1 = Yes)
-   sho - Cardiogenic Shock (0 = No, 1 = Yes)
-   chf - Congestive Heart Complications (0 = No, 1 = Yes)
-   av3 - Complete Heart Block (0 = No, 1 = Yes)
-   miord - MI Order (0 = First, 1 = Recurrent)
-   mitype - MI Type (0 = non Q-wave, 1 = Q-wave)
-   year - Cohort Year
-   admitdate - Hospital Admission Date
-   disdate - Hospital Discharge Date
-   fdate - Date of last Follow Up
-   los - Length of Hospital Stay
-   dstat - Discharge Status from Hospital (0 = Alive, 1 = Dead)
-   lenfol - Total Length of Follow-up
-   fstat - Vital Status at Last Follow-up (0 = Alive 1 = Dead)

The first ten rows look like

```{r}
#| echo: false
whas500 <- readRDS("data/clean_data.rds")
print(whas500)
```

## Kaplan-Meier Model

The Kaplan-Meier model is a non-parametric model. This model makes no distributional assumptions about survival time. The main output is a survival curve.

```{r}
#| echo: false
km_fit <- survfit(Surv(lenfol, fstat) ~ 1, data = whas500)

temp <- tibble(Time = km_fit$time, Surv = km_fit$surv)

ggsurv(s = km_fit, CI = FALSE) +
  scale_x_continuous(breaks = seq(0, 7, .5), limit = c(0, 7)) +
  scale_y_continuous(breaks = seq(0, 1, .10), labels = percent) +
  labs(title = "Kaplan-Meier Survival Curve", x = "Time", y = "Proportion of People Alive")
```

According to the curve, an estimated 70% of patients live at least 1.25 years after being admitted to the hospital for a myocardial infarction.

The KM approach can be used to compare different groups. Are congestive heart complications associated with worse survival? Visually, the green survival curve is much lower than the red survival curve indicating patients with complications die sooner than patients without.

```{r}
#| echo: false
whas500_02 <- whas500 %>%
  mutate(chf = factor(if_else(chf == 1, "Yes", "No")))
km_fit_02 <- survfit(Surv(lenfol, fstat) ~ chf, data = whas500_02)

ggsurv(s = km_fit_02, CI = FALSE) +
  scale_x_continuous(breaks = seq(0, 7, .5), limit = c(0, 7)) +
  scale_y_continuous(breaks = seq(0, 1, .10), labels = percent) +
  labs(title = "Congestive Heart Complications (KM)", y = "Proportion of People Alive")
```

Could this difference in survival be attributed to random chance alone? The log rank test shows a p-value below 5% indicating no. Complications are associated with worse survival.

```{r}
#| echo: false
survdiff(Surv(lenfol, fstat) ~ afb, data = whas500_02)
```


The Kaplan-Meier model can be used as a descriptive tool or a inference tool. For inference, all other factors are ignored. This possible issue is addressed by the next model.

# Cox Proportional Hazards Model

The Cox Proportional Hazards model is an inference tool that controls other variables that possibly influence survival time. It does this by assuming a semi-parametric relationship between the hazard function and explanatory variables. With these data, a survival curve is

```{r}
#| echo: false
# stepwise search
temp <- stepwiseCox(
  formula = Surv(lenfol, fstat) ~ age + gender + hr + sysbp + diasbp + bmi + cvd + afb + sho + chf + av3 + miord + mitype,
  data = whas500,
  selection = "bidirection",
  select = "AIC"
)

# temp[["Selected Varaibles"]]

cox <- coxph(Surv(lenfol, fstat) ~ age + chf + sho + gender + mitype, data = whas500)
# summary(cox)

cox_fit <- survfit(cox)
ggsurv(s = cox_fit, CI = FALSE) +
  scale_x_continuous(breaks = seq(0, 7, .5), limit = c(0, 7)) +
  scale_y_continuous(breaks = seq(0, 1, .10), labels = percent) +
  labs(title = "Cox Proportional Hazards Survival Curve", y = "Proportion of People Alive")
```
According to this model, an estimated 70% of patients live at least 3.25 years after being admitted.


Under the Cox model, survival is worse for patients with complications.
```{r}
#| echo: false

# Making my own graph b/c ggsurv only does KM model.
temp <- whas500 %>%
  summarise(across(.cols = c(age, chf, sho, gender, mitype), .fns = mean))
temp <- temp %>%
  mutate(
    sho = if_else(sho < .5, 0, 1),
    gender = if_else(gender < .5, 0, 1),
    mitype = if_else(mitype < .5, 0, 1)
  )
temp <- bind_rows(
  temp %>% mutate(chf = 0),
  temp %>% mutate(chf = 1)
)

cox_fit_02 <- survfit(cox, newdata = temp)

graph_df <- tibble(
  chf = c(rep("no", length(cox_fit_02$time)), rep("yes", length(cox_fit_02$time))),
  time = rep(cox_fit_02$time, 2),
  surv = c(cox_fit_02$surv[, 1], cox_fit_02$surv[, 2])
)

temp <- bind_rows(
  tibble(chf = "yes", time = 0, surv = 1),
  tibble(chf = "no", time = 0, surv = 1)
)
graph_df <- graph_df %>%
  bind_rows(temp) %>%
  arrange(chf, time, surv)
graph_df <- graph_df %>%
  mutate(factor(chf))

ggplot(graph_df, aes(x = time, y = surv, group = chf, color = chf)) +
  geom_line() +
  scale_x_continuous(breaks = seq(0, 7, .5), limit = c(0, 7)) +
  scale_y_continuous(breaks = seq(0, 1, .10), labels = percent) +
  labs(title = "Congestive Heart Complications (Cox)", y = "Proportion of People Alive")
```

Note the two survival curves have the exact same curvature. This is due to the proportional hazard assumption of the Cox model. 

Controlling for other variables, the conclusion is the same. Complications are associated with worse survival.

```{r}
#| echo: false
temp <- summary(cox)$coefficients
temp <- temp[rownames(temp) == "chf", ]
temp
```


# Survival Curve Comparison

The two models lead to meaningfully different survival curves. This is due to the difference in model assumptions. Under the hood, the Proportional Hazards model uses the Nelson-Aalen estimator of survival instead of the Kaplan-Meier estimator.

```{r}
#| echo: false
plot_df <- rbind(
  tibble(Time = km_fit$time, Surv = km_fit$surv, Model = rep("KM", length(km_fit$time))),
  tibble(Time = cox_fit$time, Surv = cox_fit$surv, Model = rep("Cox", length(cox_fit$time)))
)

ggplot(plot_df, aes(x = Time, y = Surv, color = Model)) +
  geom_step() +
  scale_x_continuous(breaks = seq(0, 7, .5), limit = c(0, 7)) +
  scale_y_continuous(breaks = seq(0, 1, .10), labels = percent) +
  labs(title = "Model Survival Curves", y = "Proportion of People Alive")
```

The K.M. estimator will never be greater than the N.A. estimator. Depending on observed data, it is possible the two estimators are functionally equal.

# Other Tools

This repo focuses on the two main tools of survival analysis used in medical research. Accelerated Failure Time (A.F.T.) models and tree based methods are two other approaches. 

A.F.T. models make a fully parametric assumption between covariates and failure time. This allows the models to estimate median failure time which is something the Cox Proportional Hazards model cannot do. 

Tree based methods take the likelihood functions used by other survival models (either Cox or A.F.T.) and replace the weighted sum of covariates with tree functions. With these new loss functions, training boosted models or random forest models continue as usual. At time of writing, XGBoost has the functionality while LightGBM has it on the to-do list.
